{
	"display": {
		"component": {
			"description": "One of the components which is responsible for displaying",
			"tests": {
				"firstTest": {
					"description": {
						"0": "Invoke constructor",
						"1": "Add object to current layout manager",
						"2": "Check on the correctness of elemnts displayed"
					},
					"expectations": "Windows with simple display and select dropdown list is displayed",
					"result": "Component manipulation doesn't result in unexpected failure or crash",
					"title": "The correctness of settlement in Swing layout, check"
				},
				"secondTest": {
					"description": {
						"0": "Create object by constructor",
						"1": "Adding him to existing layout manager",
						"2": "Set any ActionListener by module method",
						"3": "After launch application observe activity while manipulating component"
					},
					"expectations": "Components doesn't seem to expose any unexpected behaviours",
					"result": "Component is displayed properly",
					"title": "Dependency injection by setter for listener"
				},
				"thirdTest": {
					"description": {
						"0": "Invoke constructor",
						"1": "Add it to current display manager",
						"2": "Run an app",
						"3": "Check if buttons are available",
						"4": "Check if their color differs"
					},
					"expectations": "Components doesn't seem to expose any unexpected behaviours",
					"result": "Component is displayed properly",
					"title": "Testing the display of select buttons correctness"
				}
			},
			"title": "Display",
			"versions": {
				"firstVersion": {
					"FourthParagraph": {
						"description": "Getting chosen shape as String",
						"title": "getChosenShape()"
					},
					"ThirdParagraph": {
						"description": "Set text to be displayed",
						"title": "setText()"
					},
					"firstParagraph": {
						"alt": "Constructor of display photo",
						"description": "Main assumptions are displaying result of operations and messages",
						"p": {
							"0": "Displaying results of operations\"",
							"1": "Capability of setting any text at any time on the display",
							"2": "Dropdown menu with allowed figures to select"
						},
						"title": "Component description"
					},
					"secondParagraph": {
						"alt": "some methods photo",
						"description": "Dependency injection through setter to allow free manipulation of behavior",
						"title": "setComputeButtonListener()"
					}
				},
				"secondVersion": {
					"ThirdParagraph": {
						"description": "Allow to change currently chosen dimension. Highlights with green the current one",
						"title": "choseFigureType"
					},
					"firstParagraph": {
						"description": "In the second version new interface were implemented which allows for switching between 2D and 3D figures",
						"title": "Extended version of component"
					},
					"secondParagraph": {
						"alt": "actionlistener photo",
						"description": "Improved object properties accessibility",
						"title": "Get() i set()"
					}
				}
			}
		}
	},
	"home": {
		"first-row": {
			"firstP": "We create application which calculate area and perimeter of two and three dimensional geometric shape.",
			"image": {
				"clear-app": "Image of clear application"
			},
			"secondP": "Our application consist of three independent components.",
			"title": "Calculator"
		},
		"fourthRow": {
			"firstP": "Application display a value of calculated area and perimeter of chosen geometric figure.",
			"image": {
				"triangle3": "Image which presents result of calculation"
			},
			"title": "Result"
		},
		"second-row": {
			"firstP": "In first version of application we have four geometric figure to choose.",
			"image": {
				"list-app": "Image of application with select list"
			},
			"list-item": {
				"kolo": "Circle",
				"kwadrat": "Square",
				"prostokat": "Rectangle",
				"trojkat": "Triangle"
			},
			"title": "Functionalities"
		},
		"secondVersion": {
			"FourthRow": {
				"firstP": "From second version these figure are available",
				"list-item": {
					"kula": "Ball",
					"ostroslup": "Pyramid",
					"prostopadloscian": "Cuboid",
					"stozek": "Cone"
				},
				"title": "Second Version"
			},
			"ThirdRow": {
				"firstP": "Now our calculator is manage to calculate area and value of three dimensional figure",
				"title": "New Functionality"
			},
			"firstRow": {
				"title": "Second Version"
			}
		},
		"thirdRow": {
			"firstP": "Inputting values take place through keyboard",
			"image": {
				"triangle1": "Image of inputting H"
			},
			"secondP": "When all data is correct and we pressed the Enter button",
			"title": "Data entry"
		}
	},
	"keyboard": {
		"component": {
			"description": "One of components responsible for entering value from keyboard",
			"tests": {
				"firstTest": {
					"description": "Test to confirm right value input",
					"expectations": "Method should return entered value on console",
					"result": "Value presented on console is equal to entered value",
					"title": "Input value"
				},
				"secondTest": {
					"description": "Test to confirm right working reset button",
					"expectations": "Method should set value on 0",
					"result": "Set value is equal to 0",
					"title": "Reset value"
				},
				"thirdTest": {
					"description": "Test to confirm right working backspace button",
					"expectations": "Method should take value back",
					"result": "Returned value is equal to value before",
					"title": "Backspace value"
				}
			},
			"title": "Keyboard",
			"versions": {
				"firstVersion": {
					"firstParagraph": {
						"alt": "main class of keyboard",
						"description": "Component consist of panel which contains keyboard buttons",
						"p": {
							"0": "Buttons from 0 to 9 serve to input value",
							"1": "Enter button confirm entered value"
						},
						"title": "Component description"
					},
					"secondParagraph": {
						"alt": "addToValue and ResetValue methods photo",
						"description": "Methods serve to sum and reset entered value",
						"title": "AddToValue(), ValueReset()"
					}
				},
				"secondVersion": {
					"ThirdParagraph": {
						"alt": "set background color photo",
						"description": "Method give us to set background color",
						"title": "setBackgroundColor(Color cl)"
					},
					"firstParagraph": {
						"description": "In second version were implemented method to take value back and to set background color",
						"title": "Extended component version"
					},
					"secondParagraph": {
						"alt": "backspace method photo",
						"description": "Method take value back from before",
						"title": "BackSpaceMethod()"
					}
				}
			}
		}
	},
	"logic": {
		"component": {
			"description": "One of components which is responsible for program logic.",
			"firstSpace": "Second Version",
			"secondSpace": "Tests",
			"tests": {
				"firstTest": {
					"description": "Was created square object with 5cm sides length then method Area() was called.",
					"expectations": "Method which was called should return calculated value of square area equals 25cm2",
					"result": "Value which program returns is equal to the given value. Square area equals 25cm2",
					"title": "Calculate figure area"
				},
				"kroki": "Steps",
				"oczekiwania": "Expectations",
				"rezultat": "Result",
				"secondTest": {
					"description": "Was created rectangle object with 3cm and 5cm sides length then method Circumference() was called.",
					"expectations": "Method which was called should return calculated value of rectangle circumference equals 16cm",
					"result": "Value which program returns is equal to the given value. Rectangle circumference equals 16cm",
					"title": "Calculate figure circumference"
				},
				"thirdTest": {
					"description": "Was created cone object with 6cm height and 2cm radius then method Volume() was called.",
					"expectations": "Method which was called should return calculated value of cone volume equals 25.13cm3",
					"result": "Value which program returns is equal to the given value. Cone volume equals 25.13cm3",
					"title": "Calculate cone volume"
				}
			},
			"title": "Logic",
			"versions": {
				"firstVersion": {
					"ThirdParagraph": {
						"description": "Interface which contains above methods",
						"title": "IOperation"
					},
					"firstParagraph": {
						"alt": "Square class photo",
						"description": "Component consist classes and interfaces",
						"p": {
							"0": "Every class is reflection of geometric figures",
							"1": "Every class implements interface which enjoin to implement methods to calculate area and circumference",
							"2": "Every class have private values which are shared mediated by getters and setters from lombok"
						},
						"title": "Component description"
					},
					"secondParagraph": {
						"alt": "First interface photo",
						"description": "Two methods which return value of area and circumference of figure",
						"title": "Circumference() and Area()"
					}
				},
				"secondVersion": {
					"ThirdParagraph": {
						"alt": "Second interface photo",
						"description": "Interface responsible for implementations method to calculate figure volume",
						"title": "IOperationThreeDimensional"
					},
					"firstParagraph": {
						"description": "In second version were added new figures and interface to calculate volume.",
						"title": "Extended component version"
					},
					"secondParagraph": {
						"alt": "Cone class photo",
						"description": "Method which return figure volume",
						"title": "Volume()"
					}
				}
			}
		}
	},
	"nav": {
		"component": {
			"display": "Display",
			"keyboard": "Keyboard",
			"logic": "Logic"
		},
		"components": "Components",
		"home": "Home"
	}
}
